
build/jomblo.elf:     file format elf32-littlearm
build/jomblo.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001a1

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002214 memsz 0x00002218 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x08002218 align 2**15
         filesz 0x0000001c memsz 0x0000001c flags rw-
    LOAD off    0x00010420 vaddr 0x20000420 paddr 0x08002234 align 2**15
         filesz 0x00000000 memsz 0x00000330 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000400 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002124  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002214  08002214  0000a214  2**0
                  ALLOC
  3 .stacks       00000400  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000001c  20000400  08002218  00010400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000330  20000420  08002234  00010420  2**3
                  ALLOC
  6 .debug_info   0000c7ea  00000000  00000000  0001041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000037a0  00000000  00000000  0001cc06  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00003e9e  00000000  00000000  000203a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000790  00000000  00000000  00024244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000c98  00000000  00000000  000249d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00003a3b  00000000  00000000  0002566c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00001ac4  00000000  00000000  000290a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000003f  00000000  00000000  0002ab6b  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  0002abaa  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001108  00000000  00000000  0002abdc  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002214 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000400 l    d  .data	00000000 .data
20000420 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001cb0 l     F .text	00000034 Thread1
08001cf0 l     F .text	0000001e chprintf
08001d10 l     F .text	00000018 cmd_test
080020c0 l     O .text	00000010 commands
20000660 l     O .bss	000000f0 waThread1
08002100 l     O .text	00000008 shell_cfg1
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080002b4 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000420 l     O .bss	00000048 mainthread.4797
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080005b0 l     F .text	00000070 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000c20 l     F .text	00000030 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000554 l     O .bss	00000004 endmem
20000558 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000560 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
080010d0 l     F .text	00000006 readt
080010e0 l     F .text	0000000a read
080010f0 l     F .text	00000006 writet
08001100 l     F .text	0000000a write
08001110 l     F .text	00000006 gett
08001120 l     F .text	0000000a get
08001130 l     F .text	00000006 putt
08001140 l     F .text	0000000a put
08001e40 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 tm.c
08001200 l     F .text	0000000c tm_start
08001210 l     F .text	0000002c tm_stop
20000580 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
08001e60 l     O .text	00000012 cfgtab.6057
00000000 l    df *ABS*	00000000 serial_lld.c
08001450 l     F .text	00000014 notify1
08001e80 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08001640 l     F .text	0000004a long_to_string_with_divisor.constprop.0
00000000 l    df *ABS*	00000000 shell.c
080018d0 l     F .text	0000001e chprintf
080018f0 l     F .text	00000028 cmd_systime
08001920 l     F .text	000000c0 cmd_info
080019e0 l     F .text	00000040 _strtok.constprop.2
08001b10 l     F .text	00000198 shell_thread
20000400 l     O .data	00000018 local_commands
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 
08002218 l       .stacks	00000000 _etext
00001000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20001000 l       *ABS*	00000000 __ram_end__
20000750 l       .bss	00000000 _end
00000200 l       *ABS*	00000000 __main_stack_size__
00000200 l       *ABS*	00000000 __process_stack_size__
08001e90 g     O .text	00000030 pal_default_config
080002a0  w    F .text	00000002 Vector58
080002a0  w    F .text	00000002 VectorE8
080002a0  w    F .text	00000002 Vector9C
080003c0 g     F .text	00000046 nvicEnableVector
080002a0  w    F .text	00000002 VectorAC
080009b0 g     F .text	0000000a chThdExit
080004c0 g     F .text	00000058 chSysTimerHandlerI
08000bf0 g     F .text	00000022 chEvtBroadcastFlagsI
080006a0 g     F .text	00000044 chSchGoSleepTimeoutS
08000a60 g     F .text	000000c8 chMtxLockS
080002a0  w    F .text	00000002 Vector5C
080002a0  w    F .text	00000002 NMIVector
08000ff0 g     F .text	00000092 chHeapFree
080002a0  w    F .text	00000002 Vector8C
080002a0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000670 g     F .text	00000028 chSchGoSleepS
20000750 g       .bss	00000000 __heap_base__
08000840 g     F .text	00000074 chThdCreateI
080002a0  w    F .text	00000002 VectorC8
080006f0 g     F .text	00000060 chSchWakeupS
080011c0 g     F .text	0000003c sdIncomingDataI
08000e10 g     F .text	00000046 chOQGetI
08000620 g     F .text	00000014 _scheduler_init
080008c0 g     F .text	00000088 chThdCreateStatic
080002a0  w    F .text	00000002 Vector94
080002a0  w    F .text	00000002 VectorA8
080002a0  w    F .text	00000002 VectorB4
08000640 g     F .text	0000002c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
20000400 g       .stacks	00000000 __main_thread_stack_end__
08000520 g     F .text	00000018 _vt_init
08000f50 g     F .text	0000001c _heap_init
080002a0  w    F .text	00000002 Vector74
080010b0 g     F .text	00000020 halInit
20000420 g       .bss	00000000 _bss_start
08000750 g     F .text	00000040 chSchDoRescheduleBehind
080002a0  w    F .text	00000002 UsageFaultVector
20001000 g       *ABS*	00000000 __heap_end__
080002a0  w    F .text	00000002 DebugMonitorVector
08000a10 g     F .text	0000003c chThdCreateFromHeap
080002a0  w    F .text	00000002 Vector40
080001a0 g     F .text	000000fc ResetHandler
08000d10 g     F .text	00000078 chIQReadTimeout
080002a0  w    F .text	00000002 VectorBC
080002e0 g     F .text	00000030 _port_init
08001280 g     F .text	0000006c hal_lld_init
08000970 g     F .text	00000040 chThdExitS
2000065c g     O .bss	00000004 shell_terminated
08001690 g     F .text	00000240 chvprintf
08001a20 g     F .text	0000000c shellInit
080002a0  w    F .text	00000002 PendSVVector
08000540 g     F .text	00000038 chVTSetI
080002a0  w    F .text	00000002 Vector64
20000750 g       .bss	00000000 _bss_end
08000190  w    F .text	00000002 _default_exit
080013e0 g     F .text	00000068 _pal_lld_setgroupmode
080002a0  w    F .text	00000002 VectorCC
08001570 g     F .text	00000024 sd_lld_init
080002a0  w    F .text	00000002 Vector54
080002a0  w    F .text	00000002 Vector98
080002a0  w    F .text	00000002 VectorD8
080002a0  w    F .text	00000002 Vector24
08000b30 g     F .text	00000014 chMtxLock
080007d0 g     F .text	00000014 chSchDoReschedule
08000460 g     F .text	0000005c chSysInit
08000950 g     F .text	00000018 chThdSleep
08000c50 g     F .text	0000001e chIQInit
080002a0  w    F .text	00000002 Vector84
08000380 g     F .text	0000001a SysTickVector
080012f0 g     F .text	00000084 stm32_clock_init
08001380 g     F .text	0000005c _pal_lld_init
08001150 g     F .text	00000004 sdInit
080002a0  w    F .text	00000002 BusFaultVector
080002a0  w    F .text	00000002 VectorD0
08000ee0 g     F .text	00000028 _core_init
080011a0 g     F .text	0000001a sdStart
080002a0  w    F .text	00000002 VectorE4
080002a0  w    F .text	00000002 VectorC0
080003a0 g     F .text	00000010 _port_switch
080002c0 g     F .text	00000012 SVCallVector
08001d30 g     F .text	00000046 strcasecmp
08000180  w    F .text	00000002 __late_init
20000528 g     O .bss	00000010 vtlist
080002a0  w    F .text	00000002 HardFaultVector
08000310 g     F .text	00000070 _port_irq_epilogue
08000f10 g     F .text	00000034 chCoreAlloc
08001a50 g     F .text	00000018 shellCreate
08000f70 g     F .text	00000080 chHeapAlloc
08002218 g       .stacks	00000000 _textdata
080002a0  w    F .text	00000002 VectorE0
080002a0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080000f0 g     F .text	00000090 main
080002a0  w    F .text	00000002 Vector6C
20000538 g     O .bss	0000001c rlist
080002a0  w    F .text	00000002 VectorA0
080000ec g       startup	00000000 __init_array_end
080002a0  w    F .text	00000002 VectorC4
080002a0  w    F .text	00000002 Vector7C
08000a50 g     F .text	0000000a chMtxInit
08000440 g     F .text	00000014 _idle_thread
08000e60 g     F .text	00000076 chOQWriteTimeout
080002a0  w    F .text	00000002 VectorB0
08001e20 g     O .text	00000016 ch_debug
080002a0  w    F .text	00000002 Vector90
08000bc0 g     F .text	0000002e chEvtSignalI
080003b0 g     F .text	00000010 _port_thread_start
080002a0  w    F .text	00000002 Vector60
080002a0  w    F .text	00000002 Vector1C
08000790 g     F .text	0000003c chSchDoRescheduleAhead
080002a0  w    F .text	00000002 Vector48
20000200 g       .stacks	00000000 __process_stack_base__
080002a0  w    F .text	00000002 Vector70
08001470 g     F .text	000000f8 VectorD4
08000410 g     F .text	00000024 nvicSetSystemHandlerPriority
08001a70 g     F .text	0000009c shellGetLine
080009c0 g     F .text	0000004e chThdRelease
20000468 g     O .bss	000000c0 _idle_thread_wa
08000d90 g     F .text	0000001c chOQInit
08000cc0 g     F .text	00000050 chIQGetTimeout
20000400 g       .data	00000000 _data
08001090 g     F .text	00000014 chPoolFree
080002a0  w    F .text	00000002 Vector4C
080002a0  w    F .text	00000002 Vector80
08000c70 g     F .text	00000050 chIQPutI
080002b0 g     F .text	00000006 _port_switch_from_isr
08001240 g     F .text	00000040 tmInit
080002a0  w    F .text	00000002 Vector68
08000b50 g     F .text	00000064 chMtxUnlock
20000200 g       .stacks	00000000 __main_stack_end__
080002a0  w    F .text	00000002 Vector78
2000041c g       .data	00000000 _edata
08000580 g     F .text	00000024 chVTResetI
080002a0 g     F .text	00000002 _unhandled_exception
08001a30 g     F .text	00000020 shellExit
08001160 g     F .text	00000040 sdObjectInit
080002a0  w    F .text	00000002 Vector88
20000200 g       .stacks	00000000 __main_thread_stack_base__
20000418 g     O .data	00000004 __ctype_ptr__
08002110 g     O .text	00000101 _ctype_
080000ec g       startup	00000000 __init_array_start
20000584 g     O .bss	000000d8 SD1
08001dd0 g     F .text	0000003e strspn
080007f0 g     F .text	00000050 _thread_init
080002a0  w    F .text	00000002 Vector50
08000db0 g     F .text	00000054 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080002a0  w    F .text	00000002 Vector44
080002a0  w    F .text	00000002 Vector28
08001630 g     F .text	00000010 boardInit
080002a0  w    F .text	00000002 VectorB8
080015a0 g     F .text	00000078 sd_lld_start
20000400 g       .stacks	00000000 __process_stack_end__
080002a0  w    F .text	00000002 Vector34
08001620 g     F .text	00000004 __early_init
080002a0  w    F .text	00000002 VectorA4
08001d80 g     F .text	00000050 strpbrk
080002a0  w    F .text	00000002 Vector20


